---
import { ArrowIcon } from "../icons"

interface Props {
	href?: string
	className?: string
	color?: string
	aspectRatio?: string
	isHoverable?: boolean
	title?: string
}

const {
	href,
	className = "",
	color = "bg-surface",
	aspectRatio = "aspect-[4/3]",
	isHoverable = true,
	title
} = Astro.props

const wrapperClasses = `flex flex-col h-full ${className}`
const imageClasses = `${color} ${aspectRatio} rounded-2xl`
const titleLinkClasses =
	"relative underline hover:no-underline focus-ring rounded-2xl"
---

{
	href ? (
		<div class={wrapperClasses}>
			<a
				href={href}
				class="block focus-ring rounded-2xl mb-5"
				aria-labelledby={
					title
						? `card-title-${title.replace(/\s+/g, "-").toLowerCase()}`
						: undefined
				}
			>
				<div class={imageClasses}>
					<slot name="image" />
				</div>
			</a>
			<div class="card-content">
				{title && (
					<h3
						id={`card-title-${title.replace(/\s+/g, "-").toLowerCase()}`}
					>
						<a href={href} class={titleLinkClasses}>
							{title}
							<ArrowIcon class="inline-block ml-1 w-4 h-4 align-middle" />
						</a>
					</h3>
				)}
				<slot />
			</div>
		</div>
	) : (
		<div class={wrapperClasses}>
			<div class={imageClasses}>
				<slot name="image" />
			</div>
			<div class="card-content">
				{title && (
					<h3
						id={`card-title-${title.replace(/\s+/g, "-").toLowerCase()}`}
					>
						{title}
					</h3>
				)}
				<slot />
			</div>
		</div>
	)
}

<style>
	.card-content :global(h3) {
		@apply text-primary mb-2 font-sans text-body;
	}

	.card-content :global(p) {
		@apply text-secondary;
	}

	.card-content :global(h3 a) {
		display: inline;
		text-decoration: underline;
	}

	.card-content :global(h3 a:hover) {
		text-decoration: none;
	}

	.card-content :global(h3 a svg) {
		margin-left: 4px;
		width: 16px;
		height: 16px;
		vertical-align: text-bottom;
	}
</style>
